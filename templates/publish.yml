spec:
  inputs:
    runsOn:
      default: uds
    flavor:
    log_dir:
      default: .ci_logs
    reports-path:
      default: ""
    reports-name:
      default: playwright-report
    registry1Username:
      default: ${IRON_BANK_ROBOT_USERNAME}
    registry1Password:
      default: ${IRON_BANK_ROBOT_PASSWORD}
    chainguardIdentity:
      default: ${CHAINGUARD_IDENTITY}
---
publish:
  id_tokens:
    CHAINGUARD_TOKEN:
      aud: https://console-api.enforce.dev
  rules:
    - if: CI_COMMIT_TAG
    - if: $CI_MERGE_REQUEST_ID
      variables:         # Override DRY_RUN defined
        DRY_RUN: "true"  # at the job level.
  script:
    # Dry run on non-tag runs
    - if [[ "$DRY_RUN" == "true" ]]; then OPTIONS="--dry-run"; fi
    # Environment setup
    - |
      uds run actions:authenticate-registries --set REGISTRY1_USERNAME="$[[ inputs.registry1Username ]]" \
                                              --set REGISTRY1_PASSWORD="$[[ inputs.registry1Password ]]" \
                                              --set CHAINGUARD_IDENTITY="$[[ inputs.chainguardIdentity ]]" \
                                              --set CHAINGUARD_TOKEN="$CHAINGUARD_TOKEN"

    # Publish Package
    - uds run publish-package --set FLAVOR="${FLAVOR}" --no-progress "${OPTIONS}"

  after_script:
    # Save logs, which will run even if the script section fails
    - mkdir $[[ inputs.log_dir ]]
    - uds run actions:debug-output --set LOG_DIR=$[[ inputs.log_dir ]]
    - uds run actions:save-logs --set LOG_DIR=$[[ inputs.log_dir ]]

  artifacts:
    when: always
    name: debug-log-$[[ inputs.type ]]-$[[ inputs.flavor ]]-${CI_PIPELINE_ID}-${CI_JOB_ID}
    paths:
      # Save debug logs as artifacts
      - $[[ inputs.log_dir ]]/zarf-*.log
      - $[[ inputs.log_dir ]]/uds-*.log
      - $[[ inputs.log_dir ]]/maru-*.log
      - $[[ inputs.log_dir ]]/debug-*.log
      - $[[ inputs.log_dir ]]/uds-containerd-logs
      - $[[ inputs.log_dir ]]/k3d-uds-*.log
      - oscal-assessment-results.yaml

      # todo: not sure if this is right
      #     what if reports path isn't set to anything?
      #     need to do whatever we do for test job
      - $REPORTS_PATH

  tags:
    - $[[ inputs.runsOn ]]
