# Copyright 2024 Defense Unicorns
# SPDX-License-Identifier: AGPL-3.0-or-later OR LicenseRef-Defense-Unicorns-Commercial

variables:
  - name: FLAVOR
    default: upstream

tasks:
  - name: package
    description: Create the UDS Zarf Package in the repository
    inputs:
      options:
        description: For setting create time variables and flags
      path:
        description: Path to the zarf package definition being created
        default: .
      architecture:
        description: The architecture of the package to create
        default: ${UDS_ARCH}
      config:
        description: Optionally provide a path to a Zarf config file
        default: ""
        required: false
    actions:
      - env:
          - ZARF_CONFIG=${{ .inputs.config }}
        cmd: |
          if [ "${FLAVOR}" != "registry1" ] || [ "${{ .inputs.architecture }}" != "arm64" ]; then
            ./uds zarf package create ${{ .inputs.path }} --confirm --no-progress --architecture="${{ .inputs.architecture }}" --flavor "${FLAVOR}" ${{ .inputs.options }}
          else
            echo "Registry1 packages cannot be made for 'arm64'"
          fi

  - name: mutable-package
    description: Create the mutable UDS Zarf Package in the repository
    inputs:
      options:
        description: For setting create time variables and flags
      path:
        description: Path to the zarf package definition being created
        default: .
      architecture:
        description: The architecture of the package to create
        default: ${UDS_ARCH}
      config:
        description: Optionally provide a path to a Zarf config file
        default: ""
        required: false
      flavor:
        description: The flavor of the package to publish
        default: ${FLAVOR}
    actions:
      - description: Remove copied repo
        cmd: rm -rf mutable-test

      - description: Copy repo into the mutable-test folder
        shell:
          linux: bash
          darwin: bash
        cmd: |
          mkdir mutable-test

          shopt -s extglob dotglob
          cp -r !(mutable-test) mutable-test
          shopt -u dotglob

      - env:
          - ZARF_CONFIG=${{ .inputs.config }}
        shell:
          linux: bash
          darwin: bash
        dir: mutable-test
        cmd: |
          git reset --hard HEAD

          # Get the latest tag matching the FLAVOR pattern
          MUTABLE_TAG=$(git tag --list "*-${{ .inputs.flavor }}" --sort=-v:refname | head -n 1)

          # Checkout the tag if it exists
          if [[ -n "$MUTABLE_TAG" ]]; then
              git checkout "$MUTABLE_TAG"
          else
              echo "No tag found for flavor '${{ .variables.FLAVOR }}'. Skipping."
              exit 1
          fi

          if [ "${FLAVOR}" != "registry1" ] || [ "${{ .inputs.architecture }}" != "arm64" ]; then
            ./uds zarf package create ${{ .inputs.path }} --confirm --no-progress --architecture="${{ .inputs.architecture }}" --flavor "${FLAVOR}" ${{ .inputs.options }}
          else
            echo "Registry1 packages cannot be made for 'arm64'"
          fi

          PACKAGE_NAME=$(cat ${{ .inputs.path }}/zarf.yaml | ./uds zarf tools yq .metadata.name)
          LOCAL_VERSION=$(cat ${{ .inputs.path }}/zarf.yaml | ./uds zarf tools yq .metadata.version)

          mv "${{ .inputs.path }}/zarf-package-${PACKAGE_NAME}-${{ .inputs.architecture }}-${LOCAL_VERSION}.tar.zst" "../${{ .inputs.path }}/zarf-package-${PACKAGE_NAME}-${{ .inputs.architecture }}-${LOCAL_VERSION}.tar.zst"

      - description: Remove the mutable-test folder
        cmd: rm -rf mutable-test

  - name: test-bundle
    description: Create the test bundle (bundling package + dependencies for testing)
    inputs:
      options:
        description: For setting create time variables and flags
      path:
        description: Path relative to the repositories root where the uds-bundle.yaml lives
        default: bundle
      config:
        description: Path to the bundle config file. Defaults to bundle/uds-config.yaml.
        default: bundle/uds-config.yaml
      architecture:
        description: The architecture of the bundle to create
        default: ${UDS_ARCH}
    actions:
      - env:
          - UDS_CONFIG=${{ .inputs.config }}
        cmd: |
          if [ "${FLAVOR}" != "registry1" ] || [ "${{ .inputs.architecture }}" != "arm64" ]; then
            ./uds create ${{ .inputs.path }} --confirm --no-progress --architecture="${{ .inputs.architecture }}" ${{ .inputs.options }}
          else
            echo "Registry1 bundles cannot be made for 'arm64'"
          fi
