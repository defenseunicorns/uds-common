# Copyright 2024 Defense Unicorns
# SPDX-License-Identifier: AGPL-3.0-or-later OR LicenseRef-Defense-Unicorns-Commercial

includes:
  - utils: ./utils.yaml

variables:
  - name: FLAVOR
    default: upstream

tasks:
  - name: latest-package-release
    description: Pull the last release of the UDS Package (useful for upgrade testing)
    inputs:
      path:
        description: Path relative to the repositories root where the package needs to go
        default: .
      spoof_release:
        description: Whether to spoof the pulled package version to the current repo version
        default: "false"
      team:
        description: The team you want to pull the package from
        default: uds
    actions:
      - task: utils:determine-repo
        with:
          team: ${{.inputs.team}}
      - description: Get the current Zarf package name
        cmd: cat ${{ .inputs.path }}/zarf.yaml | yq .metadata.name
        setVariables:
          - name: PACKAGE_NAME
      - description: Get latest tag version from OCI
        cmd: ./uds zarf tools registry ls "${TARGET_REPO}/${PACKAGE_NAME}" | grep "${FLAVOR}" | sort -V | tail -1
        setVariables:
          - name: LATEST_VERSION
      - description: Pull the latest package release
        cmd: ./uds zarf package pull "oci://${TARGET_REPO}/${PACKAGE_NAME}:${LATEST_VERSION}" --no-progress -o ${{ .inputs.path }}
      # TODO (@WSTARR): This is currently needed to get around the chicken+egg condition when release please updates the version in GH
      - description: Spoof the latest release to the current version
        cmd: |
          if [ "${{ .inputs.spoof_release }}" != "false" ]; then
            CURRENT_VERSION=$(cat ${{ .inputs.path }}/zarf.yaml | yq .metadata.version)
            test -f "${{ .inputs.path }}/zarf-package-${PACKAGE_NAME}-${UDS_ARCH}-${CURRENT_VERSION}.tar.zst" || mv "${{ .inputs.path }}/zarf-package-${PACKAGE_NAME}-${UDS_ARCH}-${LATEST_VERSION%-*}.tar.zst" "${{ .inputs.path }}/zarf-package-${PACKAGE_NAME}-${UDS_ARCH}-${CURRENT_VERSION}.tar.zst"
          fi

  - name: latest-bundle-release
    description: Pull the last release of the UDS Bundle (useful for upgrade testing)
    inputs:
      path:
        description: Path relative to the repositories root where the bundle things happen
        default: .
      spoof_release:
        description: Whether to spoof the pulled bundle version to the current repo version
        default: "false"
      target_repo:
        description: The repository to pull from
        default: ghcr.io/defenseunicorns/packages/uds/bundles
    actions:
      - task: utils:determine-repo
      - description: Get the current uds bundle name
        cmd: cat ${{ .inputs.path }}/uds-bundle.yaml | yq .metadata.name
        setVariables:
          - name: BUNDLE_NAME
      - description: Get latest tag version from OCI
        cmd: ./uds zarf tools registry ls "${TARGET_REPO}/bundles/${BUNDLE_NAME}" | sort -V | tail -1
        setVariables:
          - name: LATEST_VERSION
      - description: Pull the latest bundle release
        cmd: ./uds pull "oci://${TARGET_REPO}/bundles/${BUNDLE_NAME}:${LATEST_VERSION}" --no-progress -o ${{ .inputs.path }}
      # TODO (@ZMILLER): This is currently needed to get around the chicken+egg condition when release please updates the version in GH
      - description: Spoof the latest release to the current version
        cmd: |
          if [ "${{ .inputs.spoof_release }}" != "false" ]; then
            CURRENT_VERSION=$(cat ${{ .inputs.path }}/uds-bundle.yaml | yq .metadata.version)
            test -f "${{ .inputs.path }}/uds-bundle-${BUNDLE_NAME}-${UDS_ARCH}-${CURRENT_VERSION}.tar.zst" || mv "${{ .inputs.path }}/uds-bundle-${BUNDLE_NAME}-${UDS_ARCH}-${LATEST_VERSION}.tar.zst" "${{ .inputs.path }}/uds-bundle-${BUNDLE_NAME}-${UDS_ARCH}-${CURRENT_VERSION}.tar.zst"
          fi
