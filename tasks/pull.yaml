includes:
  - utils: https://raw.githubusercontent.com/defenseunicorns/uds-common/7d5f445a50b19e97b9a8bed0d2445654ae05bab6/tasks/utils.yaml

variables:
  - name: FLAVOR
    default: upstream
  - name: BRANCH_NAME
  - name: LATEST_TAG

tasks:
  - name: latest-package-release
    inputs:
      path:
        description: Path relative to the repositories root where the package needs to go
        default: .
      spoof_release:
        description: Whether to spoof the pulled package version to the current repo version
        default: "false"
      team:
        description: The team you want to pull the package from
        default: uds
    actions:
      - task: utils:determine-repo
        with:
          team: ${{.inputs.team}}

      - description: Get the current Zarf package name
        cmd: cat ${{ .inputs.path }}/zarf.yaml | yq .metadata.name
        setVariables:
          - name: PACKAGE_NAME

      - description: Clone latest tag
        cmd: git clone --depth 1 --branch ${LATEST_TAG} ${REPO_URL} upgrade-test

      - description: CD into cloned repo
        cmd: cd upgrade-test

      - description: Build the tag's package
        cmd: ./uds run create-${PACKAGE_NAME}-package --set FLAVOR=${FLAVOR}

      - description: Move built package up a directory
        cmd: mv zarf-package-${PACKAGE_NAME}-${UDS_ARCH}-*.tar.zst ../

      - description: Move up a directory
        cmd: cd ../

      - description: Remove cloned repo
        cmd: rm -rf upgrade-test

      # TODO (@WSTARR): This is currently needed to get around the chicken+egg condition when release please updates the version in GH
      - description: Spoof the latest release to the current version
        cmd: |
          if [ ${{ .inputs.spoof_release }} != "false" ]; then
            CURRENT_VERSION=$(cat ${{ .inputs.path }}/zarf.yaml | yq .metadata.version)
            test -f ${{ .inputs.path }}/zarf-package-${PACKAGE_NAME}-${UDS_ARCH}-${CURRENT_VERSION}.tar.zst || mv ${{ .inputs.path }}/zarf-package-${PACKAGE_NAME}-${UDS_ARCH}-*.tar.zst ${{ .inputs.path }}/zarf-package-${PACKAGE_NAME}-${UDS_ARCH}-${CURRENT_VERSION}.tar.zst
          fi

  - name: latest-bundle-release
    inputs:
      path:
        description: Path relative to the repositories root where the bundle things happen
        default: .
      spoof_release:
        description: Whether to spoof the pulled bundle version to the current repo version
        default: "false"
      target_repo:
        description: The repository to pull from
        default: ghcr.io/defenseunicorns/packages/uds/bundles
    actions:
      - task: utils:determine-repo
        description: Get the current uds bundle name
        cmd: cat ${{ .inputs.path }}/uds-bundle.yaml | yq .metadata.name
        setVariables:
          - name: BUNDLE_NAME

      - description: Clone latest tag
        cmd: git clone --depth 1 --branch ${LATEST_TAG} ${REPO_URL} upgrade-test

      - description: CD into cloned repo
        cmd: cd upgrade-test

      - description: Build the tag's bundle
        cmd: ./uds run create-${PACKAGE_NAME}-test-bundle --set FLAVOR=${FLAVOR}

      - description: Move built package up a directory
        cmd: mv zarf-package-${PACKAGE_NAME}-${UDS_ARCH}-*.tar.zst ../

      - description: Move up a directory
        cmd: cd ../

      - description: Remove cloned repo
        cmd: rm -rf upgrade-test

      # TODO (@ZMILLER): This is currently needed to get around the chicken+egg condition when release please updates the version in GH
      - description: Spoof the latest release to the current version
        cmd: |
          if [ ${{ .inputs.spoof_release }} != "false" ]; then
            CURRENT_VERSION=$(cat ${{ .inputs.path }}/uds-bundle.yaml | yq .metadata.version)
            test -f ${{ .inputs.path }}/uds-bundle-${BUNDLE_NAME}-${UDS_ARCH}-${CURRENT_VERSION}.tar.zst || mv ${{ .inputs.path }}/uds-bundle-${BUNDLE_NAME}-${UDS_ARCH}-*.tar.zst ${{ .inputs.path }}/uds-bundle-${BUNDLE_NAME}-${UDS_ARCH}-${CURRENT_VERSION}.tar.zst
          fi
