name: Setup Environment
description: UDS Environment Setup

inputs:
  registry1Username:
    description: Registry1 Username
  registry1Password:
    description: Registry1 Password
  ghToken:
    description: GitHub Token
  udsCliVersion:
    description: The uds-cli version to install
    # renovate: datasource=github-tags depName=defenseunicorns/uds-cli versioning=semver
    default: 0.15.0
  chainguardIdentity:
    description: ID for Chainguard Identity to assume

runs:
  using: composite
  steps:
    - name: Install k3d
      shell: bash
      # renovate: datasource=github-tags depName=k3d-io/k3d versioning=semver
      run: curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | TAG=v5.7.4 bash

    - name: Set UDS CLI Arch
      id: setUdsCliArch
      shell: bash
      run: INPUT=${{ runner.arch == 'X64' && 'amd64' || runner.arch }}; echo "ARCH=${INPUT,,}" >> "$GITHUB_OUTPUT"

    - name: Install UDS CLI
      shell: bash
      run: curl -o /usr/local/bin/uds -L https://github.com/defenseunicorns/uds-cli/releases/download/v${{ inputs.udsCliVersion }}/uds-cli_v${{ inputs.udsCliVersion }}_Linux_${{steps.setUdsCliArch.outputs.ARCH}} && chmod +x /usr/local/bin/uds

    - name: Install Lula
      uses: defenseunicorns/lula-action/setup@696a9c6e4071dfa281185ca937de330effb85fca
      with:
        # renovate: datasource=github-tags depName=defenseunicorns/lula versioning=semver-coerced
        version: v0.7.0

    - name: Iron Bank Login
      if: ${{ inputs.registry1Username != '' }}
      env:
        REGISTRY_USERNAME: ${{ inputs.registry1Username }}
        REGISTRY_PASSWORD: ${{ inputs.registry1Password }}
      run: echo "${{ env.REGISTRY_PASSWORD }}" | uds zarf tools registry login -u "${{ env.REGISTRY_USERNAME }}" --password-stdin registry1.dso.mil
      shell: bash

    - name: Chainguard Login
      if: ${{ inputs.chainguardIdentity != '' }}
      uses: chainguard-dev/setup-chainctl@f52718d822dc73d21a04ef2082822c4a203163b3 # v0.2.2
      with:
        identity: ${{ inputs.chainguardIdentity }}

    - name: GHCR Login
      if: ${{ inputs.ghToken != '' }}
      env:
        GH_TOKEN: ${{ inputs.ghToken }}
      run: echo "${{ env.GH_TOKEN }}" | uds zarf tools registry login -u "dummy" --password-stdin ghcr.io
      shell: bash
