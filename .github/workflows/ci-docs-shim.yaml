# Copyright 2024 Defense Unicorns
# SPDX-License-Identifier: AGPL-3.0-or-later OR LicenseRef-Defense-Unicorns-Commercial

name: CI Doc Shim

on:
  pull_request:
    # milestoned is added here as a workaround for release-please not triggering PR workflows (PRs should be added to a milestone to trigger the workflow).
    types: [milestoned, opened, reopened, synchronize]
    paths:
      - "**.md"
      - "**.jpg"
      - "**.png"
      - "**.gif"
      - "**.svg"
      - adr/**
      - docs/**
      - .gitignore
      - renovate.json
      - .release-please-manifest.json
      - release-please-config.json
      - oscal-component.yaml
      - CODEOWNERS
      - LICENSE
      - CONTRIBUTING.md
      - SECURITY.md
      - config/renovate.json5

# Permissions for the GITHUB_TOKEN used by the workflow.
permissions:
  contents: read # Allows reading the content of the repository.
  pull-requests: read # Allows reading pull requests.

jobs:
  path-check:
    runs-on: ubuntu-latest
    outputs:
      shim: ${{ steps.check-files.outputs.shim }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Check for non-documentation changes
        id: check-files
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # allow ** for recursive globs
          shopt -s globstar

          MODIFIED_FILES=$(gh pr view ${{ github.event.pull_request.number }} \
            --repo ${{ github.repository }} --json files \
            --jq '.files[].path')

          # load glob patterns as an array
          readarray -t FILE_FILTERS < <(
            yq -r '.on.pull_request.paths[]' .github/workflows/ci-docs-shim.yaml
          )

          for FILE in $MODIFIED_FILES; do
            matched=false
            for pattern in "${FILE_FILTERS[@]}"; do
              # use bash glob matching, not regex
              if [[ "$FILE" == $pattern ]]; then
                matched=true
                break
              fi
            done
            if [ "$matched" = false ]; then
              echo "Non-documentation file changed: $FILE"
              echo "shim=false" >> $GITHUB_OUTPUT
              exit 0
            fi
          done

          echo "shim=true" >> $GITHUB_OUTPUT

  validate:
    needs: path-check
    if: ${{ needs.path-check.outputs.shim == 'true' }}
    strategy:
      matrix:
        type: [install, upgrade]
        flavor: [upstream, registry1, unicorn]
    uses: ./.github/workflows/callable-ci-docs-shim.yaml
    with:
      flavor: ${{ matrix.flavor }}
      type: ${{ matrix.type }}
    secrets: inherit # Inherits all secrets from the parent workflow.

  verify-test:
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Success
        run: echo "All tests passed successfully!"
