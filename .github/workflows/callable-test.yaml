# Copyright 2024 Defense Unicorns
# SPDX-License-Identifier: AGPL-3.0-or-later OR LicenseRef-Defense-Unicorns-Commercial

name: Callable-Test

on:
  workflow_call:
    inputs:
      runsOn:
        default: ubuntu-latest
        type: string
      upgrade-flavors:
        required: true
        type: string
      flavor:
        required: true
        type: string
      timeout:
        type: number
        default: 20
      type:
        required: true
        type: string
      options:
        type: string
        description: Additional options to set when running the test
        default: ""
      reports-path:
        type: string
        description: The path to test outputs to upload
      reports-name:
        type: string
        description: The name prefix for upload test reports
        default: playwright-report
      udsCliVersion:
        description: The uds-cli version to install
        # renovate: datasource=github-tags depName=defenseunicorns/uds-cli versioning=semver
        default: 0.27.8
        type: string
      file-filter:
        type: string
        description: |
          A string to filter files that should be tested.
          This is used to skip testing documentation changes.
          Entries use bash glob matching, patterns are separated by newlines.
        default: |
          "**.md"
          "**.jpg"
          "**.png"
          "**.gif"
          "**.svg"
          "adr/**"
          "docs/**"
          ".gitignore"
          "renovate.json"
          ".release-please-manifest.json"
          "release-please-config.json"
          "oscal-component.yaml"
          "CODEOWNERS"
          "LICENSE"
          "CONTRIBUTING.md"
          "SECURITY.md"
          "config/renovate.json5"

# Permissions for the GITHUB_TOKEN used by the workflow.
permissions:
  contents: read # Allows reading the content of the repository.
  packages: read # Allows reading the content of the repository's packages.
  id-token: write
  pull-requests: read

jobs:
  doc-shim-check:
    runs-on: ubuntu-latest
    outputs:
      do-test: ${{ steps.check-files.outputs.do-test }}
    steps:
      - name: Check for non-documentation changes
        id: check-files
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FILE_FILTER_INPUT: ${{ inputs.file-filter }}
        run: |
          env
          # allow ** for recursive globs
          shopt -s globstar

          MODIFIED_FILES=$(gh pr view ${{ github.event.pull_request.number }} \
            --repo ${{ github.repository }} --json files \
            --jq '.files[].path')

          # load glob patterns as an array
          readarray -t FILE_FILTERS < <(
            echo "$FILE_FILTER_INPUT"
          )

          for FILE in $MODIFIED_FILES; do
            matched=false
            for pattern in "${FILE_FILTERS[@]}"; do
              # use bash glob matching, not regex
              if [[ "$FILE" == $pattern ]]; then
                matched=true
                break
              fi
            done
            if [ "$matched" = false ]; then
              echo "Non-documentation file changed: $FILE"
              echo "do-test=true" >> $GITHUB_OUTPUT
              exit 0
            fi
          done

          echo "do-test=false" >> $GITHUB_OUTPUT

  run:
    needs: doc-shim-check
    runs-on: ${{ inputs.runsOn }}
    timeout-minutes: ${{ inputs.timeout }}
    if: (contains(inputs.upgrade-flavors, inputs.flavor) || inputs.type == 'install') && needs.doc-shim-check.outputs.do-test == 'true'

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Install UDS CLI
        uses: defenseunicorns/setup-uds@ab842abcad1f7a3305c2538e3dd1950d0daacfa5 # v1.0.1
        with:
          version: v${{ inputs.udsCliVersion }}

      - name: Clean Runner
        # If we are on ubuntu-latest we should try to clean the disk since it is the thing that is most limiting
        if: ${{ inputs.runsOn == 'ubuntu-latest' }}
        run: |
          echo "MARU_AUTH=\"{\"raw.githubusercontent.com\": \"${{ secrets.GITHUB_TOKEN }}\"}\"" >> "GITHUB_ENV"
          uds run actions:clean-gh-runner
        shell: bash

      - name: Environment setup
        run: |
          echo "MARU_AUTH=\"{\"raw.githubusercontent.com\": \"${{ secrets.GITHUB_TOKEN }}\"}\"" >> "GITHUB_ENV"
          uds run actions:setup-environment \
          --set REGISTRY1_USERNAME="${{ secrets.IRON_BANK_ROBOT_USERNAME }}" \
          --set REGISTRY1_PASSWORD="${{ secrets.IRON_BANK_ROBOT_PASSWORD }}" \
          --set GH_TOKEN="${{ secrets.GITHUB_TOKEN }}" \
          --set RAPIDFORT_USERNAME="${{ secrets.RAPIDFORT_USERNAME }}" \
          --set RAPIDFORT_PASSWORD="${{ secrets.RAPIDFORT_PASSWORD }}"
        shell: bash

      - name: Test
        run: uds run actions:test-deploy --set FLAVOR="${{ inputs.flavor }}" --set TYPE="${{ inputs.type }}" --set OPTIONS="${{ inputs.options }}"
        shell: bash

      - name: UDS Badge Verification
        run: uds run actions:verify-badge
        shell: bash
        continue-on-error: true

      - name: Debug Output
        if: ${{ always() }}
        run: uds run actions:debug-output
        shell: bash

      - name: Save logs
        if: ${{ always() }}
        run: uds run actions:save-logs
        shell: bash

      - name: Generate unique suffix
        id: uniq
        shell: bash
        run: |
          # shellcheck disable=SC3028
          echo "suffix=${RANDOM}" >> "$GITHUB_OUTPUT"

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: ${{ always() }}
        with:
          name: debug-log-${{ inputs.type }}-${{ inputs.flavor }}-${{ github.run_id }}-${{ github.run_attempt }}-${{ runner.arch }}-${{ steps.uniq.outputs.suffix }}
          path: |
            /tmp/zarf-*.log
            /tmp/uds-*.log
            /tmp/maru-*.log
            /tmp/debug-*.log
            /tmp/uds-containerd-logs
            /tmp/k3d-uds-*.log
            oscal-assessment-results.yaml

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: ${{ always() && inputs.reports-path != '' }}
        with:
          name: ${{ inputs.reports-name }}-${{ inputs.type }}-${{ inputs.flavor }}-${{ github.run_id }}-${{ github.run_attempt }}-${{ runner.arch }}-${{ steps.uniq.outputs.suffix }}}
          path: ${{ inputs.reports-path }}
          retention-days: 30
