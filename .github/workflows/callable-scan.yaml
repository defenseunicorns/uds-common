# Copyright 2024 Defense Unicorns
# SPDX-License-Identifier: AGPL-3.0-or-later OR LicenseRef-Defense-Unicorns-Commercial

name: Callable-Scan

on:
  workflow_call:
    inputs:
      udsCliVersion:
        description: The uds-cli version to install
        # renovate: datasource=github-tags depName=defenseunicorns/uds-cli versioning=semver
        default: 0.22.0
        type: string
      zarfYamlPath:
        description: The path to the zarf.yaml file
        default: zarf.yaml
        type: string

# Permissions for the GITHUB_TOKEN used by the workflow.
permissions:
  contents: read # Allows reading the content of the repository.
  packages: read # Allows reading the content of the repository's packages.
  id-token: write
  security-events: write
  actions: read

# Abort prior jobs in the same workflow / PR
concurrency:
  group: scan-${{ github.ref }}
  cancel-in-progress: true

jobs:
  get-image-list:
    runs-on: ubuntu-latest
    outputs:
      image_list: ${{ steps.get-image-list.outputs.image_list }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install UDS CLI
        uses: defenseunicorns/setup-uds@ab842abcad1f7a3305c2538e3dd1950d0daacfa5 # v1.0.1
        with:
          version: v${{ inputs.udsCliVersion }}

      - name: Get image list from zarf.yaml
        id: get-image-list
        run: |
          IMAGE_LIST=$(uds zarf tools yq -r -o=json -I=0 '[.components.[].images] | flatten | unique | . |= map(select((test(".sig") | not) and (test(".att") | not)))' ${{ inputs.zarfYamlPath }})
          echo "image_list=$IMAGE_LIST" >> "$GITHUB_OUTPUT"
  scan-images:
    needs: get-image-list
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: ${{ fromJson(needs.get-image-list.outputs.image_list) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install UDS CLI
        uses: defenseunicorns/setup-uds@ab842abcad1f7a3305c2538e3dd1950d0daacfa5 # v1.0.1
        with:
          version: v${{ inputs.udsCliVersion }}

      - name: Environment setup
        run: |
            uds run actions:setup-environment \
            --set REGISTRY1_USERNAME="${{ secrets.IRON_BANK_ROBOT_USERNAME }}" \
            --set REGISTRY1_PASSWORD="${{ secrets.IRON_BANK_ROBOT_PASSWORD }}" \
            --set GH_TOKEN="${{ secrets.GITHUB_TOKEN }}" \
            --set CHAINGUARD_IDENTITY="${{ secrets.CHAINGUARD_IDENTITY }}"
        shell: bash

      - name: Pull and retag image
        id: retag
        run: |
          docker pull ${{ matrix.image }}
          IMAGE_PATH=$(echo ${{ matrix.image }} | cut -d ':' -f 1)
          IMAGE_PATH_SHA_SHORT=$(echo ${IMAGE_PATH} | sha256sum | cut -c1-12)
          NEW_TAG="${IMAGE_PATH}:${IMAGE_PATH_SHA_SHORT}"
          docker tag ${{ matrix.image }} "$NEW_TAG"
          echo "NEW_TAG=$NEW_TAG" >> "$GITHUB_OUTPUT"

      - name: Scan image
        id: scan
        uses: anchore/scan-action@v6.1.0
        with:
          image: ${{ steps.retag.outputs.NEW_TAG }}
          fail-build: false

      - name: Upload SARIF as artifact
        uses: actions/upload-artifact@v4
        with:
          name: sarif
          path: ${{ steps.scan.outputs.sarif }}

      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
