# Copyright 2024 Defense Unicorns
# SPDX-License-Identifier: AGPL-3.0-or-later OR LicenseRef-Defense-Unicorns-Commercial

name: Cumulative Job Check

on:
  pull_request:
    types: [milestoned, opened, reopened, synchronize]

permissions:
  pull-requests: read
  actions: read
  statuses: read

jobs:
  cumulative-check:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: Echo Message
        shell: bash
        run: |
          # Get the PR number
          PR_NUMBER="${{ github.event.pull_request.number }}"

          # Get the head SHA of the PR
          HEAD_SHA="$(gh api "repos/${{ github.repository }}/pulls/$PR_NUMBER" -q .head.sha)"

          # List check runs for the head SHA
          checks="$(gh api "repos/${{ github.repository }}/commits/${HEAD_SHA}/check-runs" \
            -q '.check_runs[] | {name: .name, status: .status, conclusion: .conclusion}')"

          # Remove this check from the list
          checks="$(echo "$checks" | jq 'del(select(.name == "cumulative-check"))')"

          # Cleanup nulls
          checks="$(echo "$checks" | jq 'del(select(.name == "cumulative-check"))' | jq -s 'del(..|nulls) | .[]')"

          # Loop that every 5 seconds parses the checks until all checks are completed
          while true; do
            # Check if all checks are completed
            completed=$(echo "$checks" | jq -s 'all(.status == "completed")')
            if [ "$completed" == "true" ]; then
              echo "All checks are completed."
              break
            fi
            echo "Waiting for all checks to complete..."
            sleep 5
            # Re-fetch the checks
            checks="$(gh api "repos/${{ github.repository }}/commits/$HEAD_SHA/check-runs" \
              -q '.check_runs[] | {name: .name, status: .status, conclusion: .conclusion}')"
            # Remove this check from the list again
            checks="$(echo "$checks" | jq 'del(select(.name == "cumulative-check"))')"
            # Cleanup nulls
            checks="$(echo "$checks" | jq 'del(select(.name == "cumulative-check"))' | jq -s 'del(..|nulls) | .[]')"
          done

          # If any check has failed, exit with an error
          if echo "$checks" | jq -s 'any(.conclusion == "failure")' >/dev/null; then
            echo "One or more checks have failed:"
            echo "$checks" | jq -s 'select(.conclusion != "success")'
            exit 1
          fi
