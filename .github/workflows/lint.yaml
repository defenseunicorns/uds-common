name: Scan

on:
  # This workflow is triggered on pull requests to the main branch.
  pull_request:
    # milestoned is added here as a workaround for release-please not triggering PR workflows (PRs should be added to a milestone to trigger the workflow).
    types: [milestoned, opened, synchronize]
  # This allows other repositories to call this workflow in a reusable way
  workflow_call:
    inputs:
      udsCliVersion:
        description: The uds-cli version to install
        # renovate: datasource=github-tags depName=defenseunicorns/uds-cli versioning=semver
        default: 0.16.0
        type: string
      udsCommonVersion:
        description: The uds-cli version to install
        # release-please: start-version
        default: 0.13.1
        # release-please: end-version
        type: string

env:
  udsCliVersion: 0.16.0


jobs:
  set-uds-version:
    runs-on: ubuntu-latest
    outputs:
      udsCliVersion: ${{ steps.set-uds-version.outputs.udsCliVersion }}
      udsCommonVersion: ${{ steps.set-uds-common-version.outputs.udsCommonVersion }}
    steps:
      - name: Set uds version based on
        id: set-uds-version
        run: |
            # If the input is not defined (i.e., on push), use the default value
            input="${{ inputs.udsCliVersion || env.udsCliVersion }}"
            echo "udsCliVersion=$input" >> $GITHUB_OUTPUT
      - name: Set uds common version
        id: set-uds-common-version
        run: |
            # If the input is not defined (i.e., on push), use the default value
            input="${{ inputs.udsCommonVersion || github.head_ref }}"
            echo "udsCommonVersion=$input" >> $GITHUB_OUTPUT

  validate:
    needs: set-uds-version
    runs-on: ubuntu-latest
    name: Lint
    permissions:
      contents: read # Allows reading the repo contents

    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0

      - name: Set UDS CLI Arch
        id: setUdsCliArch
        shell: bash
        run: INPUT=${{ runner.arch == 'X64' && 'amd64' || runner.arch }}; echo "ARCH=${INPUT,,}" >> "$GITHUB_OUTPUT"

      - name: Install UDS CLI
        shell: bash
        run: curl -o /usr/local/bin/uds -L https://github.com/defenseunicorns/uds-cli/releases/download/v${{ needs.set-uds-version.outputs.udsCliVersion }}/uds-cli_v${{ needs.set-uds-version.outputs.udsCliVersion }}_Linux_${{steps.setUdsCliArch.outputs.ARCH}} && chmod +x /usr/local/bin/uds

      - name: Download UDS run actions.yaml
        shell: bash
        run: curl -o ./tasks/common-actions.yaml -L \
            https://raw.githubusercontent.com/defenseunicorns/uds-common/refs/heads/${{ needs.set-uds-version.outputs.udsCommonVersion }}/tasks/actions.yaml

      - name: Environment setup
        run: |
          uds run setup-environment \
          --set GH_TOKEN="${{ secrets.GITHUB_TOKEN }}" -f tasks/common-actions.yaml

        shell: bash

      - name: Install lint deps
        run: |
          uds run lint:deps --no-progress

      - name: Lint the repository
        run: |
          uds run lint:yaml --no-progress
          uds run lint:oscal --no-progress --set OSCALFILES=./oscal-component.yaml
