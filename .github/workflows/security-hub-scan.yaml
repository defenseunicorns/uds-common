name: security-hub-scan

on:
  workflow_call:
    inputs:
      path:
        description: Path to the zarf package to scan
        type: string
        required: true
      format:
        description: Scan output format
        type: string
        default: json
      version:
        description: Version of uds-security-hub to use
        type: string
        default: v0.0.11
    outputs:
      cve-scan:
        description: A filename that includes the results in input.format 
        value: ${{ steps.scan.outputs.cve-scan }}
      cosign-bundle:
        description: A file that includes the cosign bundle for verifying authenticity
        value: ${{ steps.cosign.outputs.bundle }}

# requires the id-token write permission to use keyless cosign
permissions:
  id-token: write

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
      - name: install cosign
        uses: sigstore/cosign-installer@4959ce089c160fddf62f7b42464195ba1a56d382 # v3.6.0
      
      - name: create tmpdir for output
        id: tmpdir
        run: |
          tmpdir=$(mktemp -d)
          echo "dir=$tmpdir" >> $GITHUB_OUTPUT
        shell: bash

      - name: use uds-security-hub to scan a package
        id: scan
        run: |
          OUTPUT_FILE=${{ steps.tmpdir.outputs.dir }}/cve-scan.${{ inputs.format }}

          docker run --rm \
              -v $PWD:/wrk -w /wrk \
            ghcr.io/defenseunicorns/uds-security-hub:${{ inputs.version }} \
              --package-path ${{ inputs.path }} \
              --output-format ${{ inputs.format }} \
              > "${OUTPUT_FILE}"

          echo "cve-scan=${OUTPUT_FILE}" >> "$GITHUB_OUTPUT"
        shell: bash

      - name: sign results
        id: cosign
        env:
            COSIGN_EXPERIMENTAL: "true"
        run: |
          COSIGN_BUNDLE="${{ steps.tmpdir.outputs.dir }}/cosign.bundle"
          cosign sign-blob --bundle $COSIGN_BUNDLE --yes ${{ steps.scan.outputs.cve-scan }}
          echo "bundle=${COSIGN_BUNDLE}" >> "$GITHUB_OUTPUT"
        shell: bash
      
      - name: verify cosign results
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: |
          cosign verify-blob --bundle ${{ steps.cosign.outputs.bundle }} ${{ steps.scan.outputs.cve-scan }} \
              --certificate-identity-regexp="https://github.com/${{ github.repository }}/" \
              --certificate-oidc-issuer="https://token.actions.githubusercontent.com"
        shell: bash