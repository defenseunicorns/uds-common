name: Test-Deploy

on:
  workflow_call:
    inputs:
      upgrade-flavors:
        required: true
        type: string
      flavor:
        required: true
        type: string
      type:
        required: true
        type: string
      udsCliVersion:
        description: The uds-cli version to install
        # renovate: datasource=github-tags depName=defenseunicorns/uds-cli versioning=semver
        default: 0.16.0
        type: string

# Permissions for the GITHUB_TOKEN used by the workflow.
permissions:
  contents: read # Allows reading the content of the repository.
  packages: read # Allows reading the content of the repository's packages.
  id-token: write

jobs:
  run-test:
    name: deploy
    runs-on: ubuntu-latest
    timeout-minutes: 20
    if: contains(inputs.upgrade-flavors, inputs.flavor) || inputs.type == 'install'

    steps:
      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Set UDS CLI Arch
        id: setUdsCliArch
        shell: bash
        run: INPUT=${{ runner.arch == 'X64' && 'amd64' || runner.arch }}; echo "ARCH=${INPUT,,}" >> "$GITHUB_OUTPUT"

      - name: Install UDS CLI
        shell: bash
        run: curl -o /usr/local/bin/uds -L https://github.com/defenseunicorns/uds-cli/releases/download/v${{ inputs.udsCliVersion }}/uds-cli_v${{ inputs.udsCliVersion }}_Linux_${{steps.setUdsCliArch.outputs.ARCH}} && chmod +x /usr/local/bin/uds


      - name: Clean Runner
        run: uds run actions:clean-gh-runner
        shell: bash

      - name: Environment setup
        run: |
            uds run actions:setup-environment --set REGISTRY1_USERNAME="${{ secrets.IRON_BANK_ROBOT_USERNAME }}" \
            --set REGISTRY1_PASSWORD="${{ secrets.IRON_BANK_ROBOT_PASSWORD }}" \
            --set GH_TOKEN="${{ secrets.GITHUB_TOKEN }}" \
            --set CHAINGUARD_IDENTITY="${{ secrets.CHAINGUARD_IDENTITY }}"
        shell: bash

        # TODO Update to use actions:test-deploy instead of -f tasks/actions.yaml
        # once maru issue https://github.com/defenseunicorns/maru-runner/issues/133 is resolved
      - name: Test
        run: uds run test-deploy --set FLAVOR="${{ inputs.flavor }}" --set TYPE="${{ inputs.type }}" -f tasks/actions.yaml
        shell: bash

      - name: UDS Badge Verification
        uses: uds run actions:verify-badge

      - name: Debug Output
        if: ${{ always() }}
        run: uds run actions:debug-output
        shell: bash

      - name: Save logs
        if: ${{ always() }}
        run: uds run actions:save-logs
        shell: bash

      - uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        if: ${{ always() }}
        with:
          name: debug-log${{ inputs.type }}-${{ inputs.flavor }}-${{ github.run_id }}-${{ github.run_attempt }}
          path: |
            /tmp/zarf-*.log
            /tmp/uds-*.log
            /tmp/maru-*.log
            /tmp/debug-*.log
            /tmp/uds-containerd-logs
            /tmp/k3d-uds-*.log
            /tmp/oscal-assessment-results.yaml
